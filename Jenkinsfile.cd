pipeline {
    agent any
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        BACKEND_IMAGE = "kst1040/myonitoring-backend"
        FRONTEND_IMAGE = "kst1040/myonitoring-frontend"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'ci/test', 
                    credentialsId: 'gitlab-user-pwd', 
                    url: 'https://lab.ssafy.com/s12-webmobile3-sub1/S12P11B201.git'
            }
        }
        
        stage('Build & Push Docker Images') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        def backendImage = docker.build("${BACKEND_IMAGE}:latest", "backend")
                        backendImage.push()
                        
                        def frontendImage = docker.build("${FRONTEND_IMAGE}:latest", "frontend/myonitoring")
                        frontendImage.push()
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ec2-ssh-key', keyFileVariable: 'SSH_KEY')]) {
                    sh """
                        ssh -i \$SSH_KEY -o StrictHostKeyChecking=no ubuntu@ip-172-26-8-191 '
                            cd /home/ubuntu/Myonitoring
                            docker-compose -f docker-compose.yml -f docker-compose.prod.yml pull
                            docker-compose -f docker-compose.yml -f docker-compose.prod.yml down
                            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
                        '
                    """
                }
            }
        }
    }
    
    post {
        success {
            sh 'docker image prune -f'
        }
        always {
            cleanWs()
        }
    }
}